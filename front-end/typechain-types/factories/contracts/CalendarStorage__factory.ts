/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CalendarStorage,
  CalendarStorageInterface,
} from "../../contracts/CalendarStorage";

const _abi = [
  {
    inputs: [],
    name: "availability",
    outputs: [
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "timeZone",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "availableDays",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "earliestStartMinutes",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "minutesAvailable",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dateToMeetings",
    outputs: [
      {
        internalType: "address",
        name: "attendee",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "startMinutes",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "durationMinutes",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "profile",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "picture",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108d8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e5dcee414610046578063ab60636c14610078578063c9b539001461009a575b600080fd5b610060600480360381019061005b91906105b9565b6100bc565b60405161006f9392919061067e565b60405180910390f35b610080610155565b60405161009195949392919061074e565b60405180910390f35b6100a2610421565b6040516100b39594939291906107e0565b60405180910390f35b600060205283600052604060002060205282600052604060002060205281600052604060002081815481106100f057600080fd5b906000526020600020016000935093505050508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900461ffff16908060000160169054906101000a900461ffff16905083565b600180600001805461016690610870565b80601f016020809104026020016040519081016040528092919081815260200182805461019290610870565b80156101df5780601f106101b4576101008083540402835291602001916101df565b820191906000526020600020905b8154815290600101906020018083116101c257829003601f168201915b5050505050908060010180546101f490610870565b80601f016020809104026020016040519081016040528092919081815260200182805461022090610870565b801561026d5780601f106102425761010080835404028352916020019161026d565b820191906000526020600020905b81548152906001019060200180831161025057829003601f168201915b50505050509080600201805461028290610870565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610870565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b50505050509080600301805461031090610870565b80601f016020809104026020016040519081016040528092919081815260200182805461033c90610870565b80156103895780601f1061035e57610100808354040283529160200191610389565b820191906000526020600020905b81548152906001019060200180831161036c57829003601f168201915b50505050509080600401805461039e90610870565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca90610870565b80156104175780601f106103ec57610100808354040283529160200191610417565b820191906000526020600020905b8154815290600101906020018083116103fa57829003601f168201915b5050505050905085565b600680600001805461043290610870565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90610870565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050908060010180546104c090610870565b80601f01602080910402602001604051908101604052809291908181526020018280546104ec90610870565b80156105395780601f1061050e57610100808354040283529160200191610539565b820191906000526020600020905b81548152906001019060200180831161051c57829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900461ffff16908060020160039054906101000a900461ffff16905085565b600080fd5b6000819050919050565b61059681610583565b81146105a157600080fd5b50565b6000813590506105b38161058d565b92915050565b600080600080608085870312156105d3576105d261057e565b5b60006105e1878288016105a4565b94505060206105f2878288016105a4565b9350506040610603878288016105a4565b9250506060610614878288016105a4565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064b82610620565b9050919050565b61065b81610640565b82525050565b600061ffff82169050919050565b61067881610661565b82525050565b60006060820190506106936000830186610652565b6106a0602083018561066f565b6106ad604083018461066f565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106ef5780820151818401526020810190506106d4565b838111156106fe576000848401525b50505050565b6000601f19601f8301169050919050565b6000610720826106b5565b61072a81856106c0565b935061073a8185602086016106d1565b61074381610704565b840191505092915050565b600060a08201905081810360008301526107688188610715565b9050818103602083015261077c8187610715565b905081810360408301526107908186610715565b905081810360608301526107a48185610715565b905081810360808301526107b88184610715565b90509695505050505050565b600060ff82169050919050565b6107da816107c4565b82525050565b600060a08201905081810360008301526107fa8188610715565b9050818103602083015261080e8187610715565b905061081d60408301866107d1565b61082a606083018561066f565b610837608083018461066f565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061088857607f821691505b6020821081141561089c5761089b610841565b5b5091905056fea264697066735822122074b2a81e38b72d0f8846830f0d7a3504484154b658c9978a294ebd24463a055664736f6c63430008090033";

type CalendarStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalendarStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CalendarStorage__factory extends ContractFactory {
  constructor(...args: CalendarStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CalendarStorage> {
    return super.deploy(overrides || {}) as Promise<CalendarStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CalendarStorage {
    return super.attach(address) as CalendarStorage;
  }
  override connect(signer: Signer): CalendarStorage__factory {
    return super.connect(signer) as CalendarStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalendarStorageInterface {
    return new utils.Interface(_abi) as CalendarStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalendarStorage {
    return new Contract(address, _abi, signerOrProvider) as CalendarStorage;
  }
}
